// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target x86_64-apple-ios12.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name KoinFingerprint
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1
import AdSupport
import CommonCrypto
import CoreLocation
import CoreMotion
import Dispatch
import Foundation
@_exported import KoinFingerprint
import LocalAuthentication
import MachO
import MetalKit
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class KoinFingerprinter {
  public static let DEFAULT_URL: Swift.String
  public static let MIN_TIMEOUT: Swift.Double
  public static func register(organizationId: Swift.String, url: Swift.String = DEFAULT_URL)
  public static func profile(sessionId: Swift.String, timeoutInSeconds timeout: Swift.Double = MIN_TIMEOUT)
  public static func profile(timeoutInSeconds timeout: Swift.Double = MIN_TIMEOUT) -> Swift.String
  @objc deinit
}
public enum CriticalityLevel {
  case CRITICAL, NORMAL
  public static func == (a: KoinFingerprint.CriticalityLevel, b: KoinFingerprint.CriticalityLevel) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct HarvestDefinition {
  public let key: Swift.String
  public let criticalityLevel: KoinFingerprint.CriticalityLevel
}
public struct HarvestResponse {
  public let data: Any?
  public let harvester: KoinFingerprint.HarvestDefinition
  public let metrics: [Swift.String : Any?]?
  public let extraData: [Swift.String : Any?]?
}
public protocol Harvester {
  var definition: KoinFingerprint.HarvestDefinition { get }
  func harvest() -> KoinFingerprint.HarvestResponse
}
extension KoinFingerprint.CriticalityLevel : Swift.Equatable {}
extension KoinFingerprint.CriticalityLevel : Swift.Hashable {}
